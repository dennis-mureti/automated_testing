{"ast":null,"code":"var _jsxFileName = \"/Users/dennismureti/Downloads/todo-app/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Login from './Login';\nimport TodoList from './TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    if (isLoggedIn) {\n      fetch('http://localhost:3001/items', {\n        credentials: 'include'\n      }).then(res => {\n        if (!res.ok) {\n          throw new Error(`HTTP error! status: ${res.status}`);\n        }\n        return res.json();\n      }).then(data => setTodos(data)).catch(error => {\n        console.error('Error fetching todos:', error);\n        alert('Failed to fetch todos. Please try again.');\n      });\n    }\n  }, [isLoggedIn]);\n  const handleLogin = (username, password) => {\n    fetch('http://localhost:3001/login', {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.success) {\n        setIsLoggedIn(true);\n      }\n    });\n  };\n  const addTodo = () => {\n    fetch('http://localhost:3002/items', {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({})\n    }).then(res => {\n      if (!res.ok) {\n        throw new Error(`HTTP error! status: ${res.status}`);\n      }\n      return res.json();\n    }).then(newTodo => {\n      setTodos([...todos, newTodo]);\n    }).catch(error => {\n      console.error('Error adding todo:', error);\n      alert('Failed to add todo. Please try again.');\n    });\n  };\n  const updateTodo = (id, updates) => {\n    fetch(`http://localhost:3001/items/${id}`, {\n      method: 'PUT',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updates)\n    }).then(res => res.json()).then(updatedTodo => {\n      setTodos(todos.map(todo => todo.id === id ? updatedTodo : todo));\n    });\n  };\n  const deleteTodo = id => {\n    fetch(`http://localhost:3001/items/${id}`, {\n      method: 'DELETE',\n      credentials: 'include'\n    }).then(() => {\n      setTodos(todos.filter(todo => todo.id !== id));\n    });\n  };\n  const handleAdd = e => {\n    e.preventDefault();\n    addTodo();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: !isLoggedIn ? /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAdd,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        todos: todos,\n        onAdd: addTodo,\n        onUpdate: updateTodo,\n        onDelete: deleteTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"c8Wbh6ITgNX8aITa917UL7sF/To=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Login","TodoList","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","todos","setTodos","fetch","credentials","then","res","ok","Error","status","json","data","catch","error","console","alert","handleLogin","username","password","method","headers","body","JSON","stringify","success","addTodo","newTodo","updateTodo","id","updates","updatedTodo","map","todo","deleteTodo","filter","handleAdd","e","preventDefault","className","children","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onAdd","onUpdate","onDelete","_c","$RefreshReg$"],"sources":["/Users/dennismureti/Downloads/todo-app/frontend/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport Login from './Login';\nimport TodoList from './TodoList';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      fetch('http://localhost:3001/items', {\n        credentials: 'include'\n      })\n        .then(res => {\n          if (!res.ok) {\n            throw new Error(`HTTP error! status: ${res.status}`);\n          }\n          return res.json();\n        })\n        .then(data => setTodos(data))\n        .catch(error => {\n          console.error('Error fetching todos:', error);\n          alert('Failed to fetch todos. Please try again.');\n        });\n    }\n  }, [isLoggedIn]);\n\n  const handleLogin = (username, password) => {\n    fetch('http://localhost:3001/login', {\n      method: 'POST',\n      credentials: 'include',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ username, password })\n    })\n    .then(res => res.json())\n    .then(data => {\n      if (data.success) {\n        setIsLoggedIn(true);\n      }\n    });\n  };\n\n  const addTodo = () => {\n    fetch('http://localhost:3002/items', {\n      method: 'POST',\n      credentials: 'include',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({})\n    })\n    .then(res => {\n      if (!res.ok) {\n        throw new Error(`HTTP error! status: ${res.status}`);\n      }\n      return res.json();\n    })\n    .then(newTodo => {\n      setTodos([...todos, newTodo]);\n    })\n    .catch(error => {\n      console.error('Error adding todo:', error);\n      alert('Failed to add todo. Please try again.');\n    });\n  };\n\n  const updateTodo = (id, updates) => {\n    fetch(`http://localhost:3001/items/${id}`, {\n      method: 'PUT',\n      credentials: 'include',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(updates)\n    })\n    .then(res => res.json())\n    .then(updatedTodo => {\n      setTodos(todos.map(todo => todo.id === id ? updatedTodo : todo));\n    });\n  };\n\n  const deleteTodo = (id) => {\n    fetch(`http://localhost:3001/items/${id}`, {\n      method: 'DELETE',\n      credentials: 'include'\n    })\n    .then(() => {\n      setTodos(todos.filter(todo => todo.id !== id));\n    });\n  };\n\n  const handleAdd = (e) => {\n    e.preventDefault();\n    addTodo();\n  };\n\n  return (\n    <div className=\"app\">\n      {!isLoggedIn ? (\n        <Login onLogin={handleLogin} />\n      ) : (\n        <div>\n          <form onSubmit={handleAdd}>\n            <button type=\"submit\">Add Todo</button>\n          </form>\n          <TodoList \n            todos={todos} \n            onAdd={addTodo} \n            onUpdate={updateTodo} \n            onDelete={deleteTodo} \n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}