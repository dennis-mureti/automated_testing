{"ast":null,"code":"var _jsxFileName = \"/Users/dennismureti/Downloads/todo-app/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport TodoList from './components/TodoList';\nimport Login from './components/Login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [todos, setTodos] = useState([]);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    if (isLoggedIn) {\n      fetchTodos();\n    }\n  }, [isLoggedIn]);\n  const fetchTodos = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:3001/todos', {\n        headers: {\n          'Authorization': token\n        }\n      });\n      const data = await response.json();\n      setTodos(data);\n    } catch (err) {\n      setError('Failed to fetch todos');\n    }\n  };\n  const handleLogin = async (username, password) => {\n    try {\n      const response = await fetch('http://localhost:3001/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const data = await response.json();\n      if (data.token) {\n        localStorage.setItem('token', data.token);\n        setIsLoggedIn(true);\n      } else {\n        setError(data.error || 'Login failed');\n      }\n    } catch (err) {\n      setError('Login failed');\n    }\n  };\n  const addTodo = async title => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:3001/todos', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': token\n        },\n        body: JSON.stringify({\n          title\n        })\n      });\n      const newTodo = await response.json();\n      setTodos([...todos, newTodo]);\n    } catch (err) {\n      setError('Failed to add todo');\n    }\n  };\n  const toggleTodo = async (id, completed) => {\n    try {\n      const token = localStorage.getItem('token');\n      await fetch(`http://localhost:3001/todos/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': token\n        },\n        body: JSON.stringify({\n          completed: !completed\n        })\n      });\n      setTodos(todos.map(todo => todo.id === id ? {\n        ...todo,\n        completed: !completed\n      } : todo));\n    } catch (err) {\n      setError('Failed to update todo');\n    }\n  };\n  const deleteTodo = async id => {\n    try {\n      const token = localStorage.getItem('token');\n      await fetch(`http://localhost:3001/todos/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': token\n        }\n      });\n      setTodos(todos.filter(todo => todo.id !== id));\n    } catch (err) {\n      setError('Failed to delete todo');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }, this), !isLoggedIn ? /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      onAdd: addTodo,\n      onToggle: toggleTodo,\n      onDelete: deleteTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"i+YI77MEI/GDbkjshF8hJSZ98Fo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","TodoList","Login","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","todos","setTodos","error","setError","fetchTodos","token","localStorage","getItem","response","fetch","headers","data","json","err","handleLogin","username","password","method","body","JSON","stringify","setItem","addTodo","title","newTodo","toggleTodo","id","completed","map","todo","deleteTodo","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","onAdd","onToggle","onDelete","_c","$RefreshReg$"],"sources":["/Users/dennismureti/Downloads/todo-app/frontend/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport TodoList from './components/TodoList';\nimport Login from './components/Login';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [todos, setTodos] = useState([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      fetchTodos();\n    }\n  }, [isLoggedIn]);\n\n  const fetchTodos = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:3001/todos', {\n        headers: { 'Authorization': token }\n      });\n      const data = await response.json();\n      setTodos(data);\n    } catch (err) {\n      setError('Failed to fetch todos');\n    }\n  };\n\n  const handleLogin = async (username, password) => {\n    try {\n      const response = await fetch('http://localhost:3001/login', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password })\n      });\n      const data = await response.json();\n      if (data.token) {\n        localStorage.setItem('token', data.token);\n        setIsLoggedIn(true);\n      } else {\n        setError(data.error || 'Login failed');\n      }\n    } catch (err) {\n      setError('Login failed');\n    }\n  };\n\n  const addTodo = async (title) => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:3001/todos', {\n        method: 'POST',\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': token\n        },\n        body: JSON.stringify({ title })\n      });\n      const newTodo = await response.json();\n      setTodos([...todos, newTodo]);\n    } catch (err) {\n      setError('Failed to add todo');\n    }\n  };\n\n  const toggleTodo = async (id, completed) => {\n    try {\n      const token = localStorage.getItem('token');\n      await fetch(`http://localhost:3001/todos/${id}`, {\n        method: 'PUT',\n        headers: { \n          'Content-Type': 'application/json',\n          'Authorization': token\n        },\n        body: JSON.stringify({ completed: !completed })\n      });\n      setTodos(todos.map(todo => \n        todo.id === id ? { ...todo, completed: !completed } : todo\n      ));\n    } catch (err) {\n      setError('Failed to update todo');\n    }\n  };\n\n  const deleteTodo = async (id) => {\n    try {\n      const token = localStorage.getItem('token');\n      await fetch(`http://localhost:3001/todos/${id}`, {\n        method: 'DELETE',\n        headers: { 'Authorization': token }\n      });\n      setTodos(todos.filter(todo => todo.id !== id));\n    } catch (err) {\n      setError('Failed to delete todo');\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      {error && <div className=\"error\">{error}</div>}\n      {!isLoggedIn ? (\n        <Login onLogin={handleLogin} />\n      ) : (\n        <TodoList \n          todos={todos} \n          onAdd={addTodo} \n          onToggle={toggleTodo} \n          onDelete={deleteTodo} \n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}